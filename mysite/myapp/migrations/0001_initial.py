# Generated by Django 5.2.3 on 2025-07-06 12:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
import multiselectfield.db.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("first_name", models.CharField(max_length=50)),
                ("last_name", models.CharField(max_length=50)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "男"), ("F", "女"), ("O", "其他")],
                        max_length=1,
                        null=True,
                    ),
                ),
                (
                    "preferred_travel",
                    multiselectfield.db.fields.MultiSelectField(
                        choices=[
                            ("Nature", "自然風光"),
                            ("Hike", "健行"),
                            ("Beach", "海灘度假"),
                            ("City", "城市觀光"),
                            ("Cultural", "文化探索"),
                            ("Food", "美食旅遊"),
                            ("Backpack", "背包旅行"),
                            ("Luxury", "奢華旅行"),
                            ("History", "歷史遺跡"),
                            ("Shopping", "購物旅遊"),
                            ("Self", "自駕遊"),
                            ("Night", "夜生活探索"),
                            ("Slow", "慢旅行"),
                            ("Indoor", "室內主題樂園"),
                            ("Music", "音樂與藝術節慶旅遊"),
                            ("Farm", "農場體驗與鄉村旅遊"),
                        ],
                        max_length=200,
                    ),
                ),
                (
                    "travel_partner",
                    models.CharField(
                        choices=[
                            ("same", "同性"),
                            ("different", "異性"),
                            ("any", "都可以"),
                        ],
                        default="any",
                        max_length=10,
                    ),
                ),
                (
                    "preferred_age_range",
                    models.CharField(
                        choices=[
                            ("18-25", "18-25 歲"),
                            ("26-35", "26-35 歲"),
                            ("36-45", "36-45 歲"),
                            ("46-60", "46-60 歲"),
                            ("any", "不限"),
                        ],
                        default="any",
                        max_length=20,
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(blank=True, null=True, upload_to="avatars/"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "CustomUser",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
